
#### DIRECTORY = sysdeps/unix/sysv/linux/wordsize-64
#### SYSDIRS = sysdeps/unix/sysv/linux/aarch64 sysdeps/aarch64/nptl

#### CALL=personality NUMBER=(92) ARGS=i:i SOURCE=-
ifeq (,$(filter personality,$(unix-syscalls)))
unix-syscalls += personality
unix-extra-syscalls += personality
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,personality)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME personality'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __personality'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__personality, personality)'; \
	 echo 'hidden_weak (personality)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %personality,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### DIRECTORY = sysdeps/unix/sysv/linux
#### SYSDIRS = sysdeps/unix/sysv/linux/aarch64 sysdeps/aarch64/nptl sysdeps/unix/sysv/linux/wordsize-64

#### CALL=alarm NUMBER=- ARGS=i:i SOURCE=-

#### CALL=bdflush NUMBER=- ARGS=i:ii SOURCE=-
unix-stub-syscalls += __compat_bdflush bdflush@GLIBC_2.0:GLIBC_2.23

#### CALL=capget NUMBER=(90) ARGS=i:pp SOURCE=-
ifeq (,$(filter capget,$(unix-syscalls)))
unix-syscalls += capget
unix-extra-syscalls += capget
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,capget)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME capget'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL capget'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %capget,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=capset NUMBER=(91) ARGS=i:pp SOURCE=-
ifeq (,$(filter capset,$(unix-syscalls)))
unix-syscalls += capset
unix-extra-syscalls += capset
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,capset)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME capset'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL capset'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %capset,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=create_module NUMBER=- ARGS=3 SOURCE=-
unix-stub-syscalls += __compat_create_module create_module@GLIBC_2.0:GLIBC_2.23

#### CALL=delete_module NUMBER=(106) ARGS=3 SOURCE=-
ifeq (,$(filter delete_module,$(unix-syscalls)))
unix-syscalls += delete_module
unix-extra-syscalls += delete_module
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,delete_module)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME delete_module'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL delete_module'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %delete_module,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=epoll_create1 NUMBER=(20) ARGS=i:i SOURCE=-
ifeq (,$(filter epoll_create1,$(unix-syscalls)))
unix-syscalls += epoll_create1
unix-extra-syscalls += epoll_create1
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,epoll_create1)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME epoll_create1'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL epoll_create1'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %epoll_create1,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=epoll_ctl NUMBER=(21) ARGS=i:iiip SOURCE=-
ifeq (,$(filter epoll_ctl,$(unix-syscalls)))
unix-syscalls += epoll_ctl
unix-extra-syscalls += epoll_ctl
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,epoll_ctl)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME epoll_ctl'; \
	 echo '#define SYSCALL_NARGS 4'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL epoll_ctl'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %epoll_ctl,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=eventfd NUMBER=(19) ARGS=i:ii SOURCE=-
ifeq (,$(filter eventfd,$(unix-syscalls)))
unix-syscalls += eventfd
unix-extra-syscalls += eventfd
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,eventfd)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME eventfd2'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL eventfd'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %eventfd,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=execve NUMBER=(221) ARGS=i:spp SOURCE=-
ifeq (,$(filter execve,$(unix-syscalls)))
unix-syscalls += execve
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,execve)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME execve'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __execve'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__execve, execve)'; \
	 echo 'hidden_weak (execve)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %execve,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=flock NUMBER=(32) ARGS=i:ii SOURCE=-
ifeq (,$(filter flock,$(unix-syscalls)))
unix-syscalls += flock
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,flock)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME flock'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __flock'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__flock, flock)'; \
	 echo 'hidden_weak (flock)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %flock,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fsconfig NUMBER=(431) ARGS=i:iUsNi SOURCE=-
ifeq (,$(filter fsconfig,$(unix-syscalls)))
unix-syscalls += fsconfig
unix-extra-syscalls += fsconfig
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fsconfig)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fsconfig'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL fsconfig'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fsconfig,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fsmount NUMBER=(432) ARGS=i:iUU SOURCE=-
ifeq (,$(filter fsmount,$(unix-syscalls)))
unix-syscalls += fsmount
unix-extra-syscalls += fsmount
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fsmount)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fsmount'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 3'; \
	 echo '#define SYSCALL_SYMBOL fsmount'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fsmount,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fsopen NUMBER=(430) ARGS=i:sU SOURCE=-
ifeq (,$(filter fsopen,$(unix-syscalls)))
unix-syscalls += fsopen
unix-extra-syscalls += fsopen
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fsopen)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fsopen'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL fsopen'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fsopen,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fspick NUMBER=(433) ARGS=i:isU SOURCE=-
ifeq (,$(filter fspick,$(unix-syscalls)))
unix-syscalls += fspick
unix-extra-syscalls += fspick
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fspick)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fspick'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 3'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL fspick'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fspick,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=get_kernel_syms NUMBER=- ARGS=i:p SOURCE=-
unix-stub-syscalls += __compat_get_kernel_syms get_kernel_syms@GLIBC_2.0:GLIBC_2.23

#### CALL=getpid NUMBER=(172) ARGS=i: SOURCE=-
ifeq (,$(filter getpid,$(unix-syscalls)))
unix-syscalls += getpid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getpid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getpid'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __getpid'; \
	 echo '#define SYSCALL_NOERRNO 1'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__getpid, getpid)'; \
	 echo 'hidden_weak (getpid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getpid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=getegid NUMBER=(177) ARGS=i: SOURCE=-
ifeq (,$(filter getegid,$(unix-syscalls)))
unix-syscalls += getegid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getegid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getegid'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __getegid'; \
	 echo '#define SYSCALL_NOERRNO 1'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__getegid, getegid)'; \
	 echo 'hidden_weak (getegid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getegid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=geteuid NUMBER=(175) ARGS=i: SOURCE=-
ifeq (,$(filter geteuid,$(unix-syscalls)))
unix-syscalls += geteuid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,geteuid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME geteuid'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __geteuid'; \
	 echo '#define SYSCALL_NOERRNO 1'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__geteuid, geteuid)'; \
	 echo 'hidden_weak (geteuid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %geteuid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=getpgid NUMBER=(155) ARGS=i:i SOURCE=-
ifeq (,$(filter getpgid,$(unix-syscalls)))
unix-syscalls += getpgid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getpgid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getpgid'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __getpgid'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__getpgid, getpgid)'; \
	 echo 'hidden_weak (getpgid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getpgid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=getpgrp NUMBER=- ARGS=i: SOURCE=-

#### CALL=getppid NUMBER=(173) ARGS=i: SOURCE=-
ifeq (,$(filter getppid,$(unix-syscalls)))
unix-syscalls += getppid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getppid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getppid'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __getppid'; \
	 echo '#define SYSCALL_NOERRNO 1'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__getppid, getppid)'; \
	 echo 'hidden_weak (getppid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getppid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=getresuid NUMBER=(148) ARGS=i:ppp SOURCE=-
ifeq (,$(filter getresuid,$(unix-syscalls)))
unix-syscalls += getresuid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getresuid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getresuid'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL getresuid'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getresuid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=getresgid NUMBER=(150) ARGS=i:ppp SOURCE=-
ifeq (,$(filter getresgid,$(unix-syscalls)))
unix-syscalls += getresgid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getresgid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getresgid'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL getresgid'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getresgid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=getsid NUMBER=(156) ARGS=i:i SOURCE=-
ifeq (,$(filter getsid,$(unix-syscalls)))
unix-syscalls += getsid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getsid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getsid'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL getsid'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getsid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=init_module NUMBER=(105) ARGS=5 SOURCE=-
ifeq (,$(filter init_module,$(unix-syscalls)))
unix-syscalls += init_module
unix-extra-syscalls += init_module
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,init_module)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME init_module'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL init_module'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %init_module,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=inotify_add_watch NUMBER=(27) ARGS=i:isi SOURCE=-
ifeq (,$(filter inotify_add_watch,$(unix-syscalls)))
unix-syscalls += inotify_add_watch
unix-extra-syscalls += inotify_add_watch
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,inotify_add_watch)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME inotify_add_watch'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL inotify_add_watch'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %inotify_add_watch,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=inotify_init1 NUMBER=(26) ARGS=i:I SOURCE=-
ifeq (,$(filter inotify_init1,$(unix-syscalls)))
unix-syscalls += inotify_init1
unix-extra-syscalls += inotify_init1
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,inotify_init1)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME inotify_init1'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL inotify_init1'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %inotify_init1,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=inotify_rm_watch NUMBER=(28) ARGS=i:ii SOURCE=-
ifeq (,$(filter inotify_rm_watch,$(unix-syscalls)))
unix-syscalls += inotify_rm_watch
unix-extra-syscalls += inotify_rm_watch
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,inotify_rm_watch)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME inotify_rm_watch'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL inotify_rm_watch'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %inotify_rm_watch,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=ioperm NUMBER=- ARGS=i:UUi SOURCE=-

#### CALL=iopl NUMBER=- ARGS=i:i SOURCE=-

#### CALL=klogctl NUMBER=(116) ARGS=i:isi SOURCE=-
ifeq (,$(filter klogctl,$(unix-syscalls)))
unix-syscalls += klogctl
unix-extra-syscalls += klogctl
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,klogctl)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME syslog'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL klogctl'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %klogctl,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=lchown NUMBER=- ARGS=i:sii SOURCE=-

#### CALL=mincore NUMBER=(232) ARGS=i:aUV SOURCE=-
ifeq (,$(filter mincore,$(unix-syscalls)))
unix-syscalls += mincore
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,mincore)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME mincore'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL mincore'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %mincore,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=mlock NUMBER=(228) ARGS=i:bU SOURCE=-
ifeq (,$(filter mlock,$(unix-syscalls)))
unix-syscalls += mlock
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,mlock)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME mlock'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL mlock'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %mlock,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=mlockall NUMBER=(230) ARGS=i:i SOURCE=-
ifeq (,$(filter mlockall,$(unix-syscalls)))
unix-syscalls += mlockall
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,mlockall)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME mlockall'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL mlockall'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %mlockall,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=mount NUMBER=(40) ARGS=i:sssUp SOURCE=-
ifeq (,$(filter mount,$(unix-syscalls)))
unix-syscalls += mount
unix-extra-syscalls += mount
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,mount)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME mount'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 4'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __mount'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__mount, mount)'; \
	 echo 'hidden_weak (mount)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %mount,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=mount_setattr NUMBER=(442) ARGS=i:isUpU SOURCE=-
ifeq (,$(filter mount_setattr,$(unix-syscalls)))
unix-syscalls += mount_setattr
unix-extra-syscalls += mount_setattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,mount_setattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME mount_setattr'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 3'; \
	 echo '#define SYSCALL_ULONG_ARG_2 5'; \
	 echo '#define SYSCALL_SYMBOL mount_setattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %mount_setattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=move_mount NUMBER=(429) ARGS=i:isisU SOURCE=-
ifeq (,$(filter move_mount,$(unix-syscalls)))
unix-syscalls += move_mount
unix-extra-syscalls += move_mount
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,move_mount)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME move_mount'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 5'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL move_mount'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %move_mount,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=munlock NUMBER=(229) ARGS=i:aU SOURCE=-
ifeq (,$(filter munlock,$(unix-syscalls)))
unix-syscalls += munlock
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,munlock)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME munlock'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL munlock'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %munlock,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=munlockall NUMBER=(231) ARGS=i: SOURCE=-
ifeq (,$(filter munlockall,$(unix-syscalls)))
unix-syscalls += munlockall
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,munlockall)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME munlockall'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL munlockall'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %munlockall,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=nfsservctl NUMBER=(42) ARGS=i:ipp SOURCE=-
ifeq (,$(filter nfsservctl,$(unix-syscalls)))
ifneq (,$(filter .os,$(object-suffixes)))
unix-syscalls += nfsservctl
unix-extra-syscalls += nfsservctl
shared-only-routines += nfsservctl
$(objpfx)nfsservctl.os: \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME nfsservctl'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __compat_nfsservctl'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo '#include <shlib-compat.h>'; \
	 echo '#if defined SHARED && IS_IN (libc) && SHLIB_COMPAT (libc, GLIBC_2_0, GLIBC_2_28)'; \
	 echo 'compat_symbol (libc, __compat_nfsservctl, nfsservctl, GLIBC_2_0)'; \
	 echo '#endif'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %nfsservctl,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif
endif

#### CALL=open_tree NUMBER=(428) ARGS=i:isU SOURCE=-
ifeq (,$(filter open_tree,$(unix-syscalls)))
unix-syscalls += open_tree
unix-extra-syscalls += open_tree
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,open_tree)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME open_tree'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 3'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL open_tree'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %open_tree,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=pipe2 NUMBER=(59) ARGS=i:fi SOURCE=-
ifeq (,$(filter pipe2,$(unix-syscalls)))
unix-syscalls += pipe2
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,pipe2)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME pipe2'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __pipe2'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__pipe2, pipe2)'; \
	 echo 'hidden_weak (pipe2)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %pipe2,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=pidfd_open NUMBER=(434) ARGS=i:iU SOURCE=-
ifeq (,$(filter pidfd_open,$(unix-syscalls)))
unix-syscalls += pidfd_open
unix-extra-syscalls += pidfd_open
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,pidfd_open)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME pidfd_open'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL pidfd_open'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %pidfd_open,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=pidfd_getfd NUMBER=(438) ARGS=i:iiU SOURCE=-
ifeq (,$(filter pidfd_getfd,$(unix-syscalls)))
unix-syscalls += pidfd_getfd
unix-extra-syscalls += pidfd_getfd
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,pidfd_getfd)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME pidfd_getfd'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 3'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL pidfd_getfd'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %pidfd_getfd,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=pivot_root NUMBER=(41) ARGS=i:ss SOURCE=-
ifeq (,$(filter pivot_root,$(unix-syscalls)))
unix-syscalls += pivot_root
unix-extra-syscalls += pivot_root
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,pivot_root)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME pivot_root'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL pivot_root'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %pivot_root,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=pidfd_send_signal NUMBER=(424) ARGS=i:iiPU SOURCE=-
ifeq (,$(filter pidfd_send_signal,$(unix-syscalls)))
unix-syscalls += pidfd_send_signal
unix-extra-syscalls += pidfd_send_signal
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,pidfd_send_signal)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME pidfd_send_signal'; \
	 echo '#define SYSCALL_NARGS 4'; \
	 echo '#define SYSCALL_ULONG_ARG_1 4'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL pidfd_send_signal'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %pidfd_send_signal,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=process_madvise NUMBER=(440) ARGS=i:iPniU SOURCE=-
ifeq (,$(filter process_madvise,$(unix-syscalls)))
unix-syscalls += process_madvise
unix-extra-syscalls += process_madvise
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,process_madvise)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME process_madvise'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 5'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL process_madvise'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %process_madvise,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=process_mrelease NUMBER=(448) ARGS=i:iU SOURCE=-
ifeq (,$(filter process_mrelease,$(unix-syscalls)))
unix-syscalls += process_mrelease
unix-extra-syscalls += process_mrelease
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,process_mrelease)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME process_mrelease'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL process_mrelease'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %process_mrelease,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=query_module NUMBER=- ARGS=i:sipip SOURCE=-
unix-stub-syscalls += __compat_query_module query_module@GLIBC_2.0:GLIBC_2.23

#### CALL=quotactl NUMBER=(60) ARGS=i:isip SOURCE=-
ifeq (,$(filter quotactl,$(unix-syscalls)))
unix-syscalls += quotactl
unix-extra-syscalls += quotactl
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,quotactl)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME quotactl'; \
	 echo '#define SYSCALL_NARGS 4'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL quotactl'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %quotactl,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=remap_file_pages NUMBER=(234) ARGS=i:pUiUi SOURCE=-
ifeq (,$(filter remap_file_pages,$(unix-syscalls)))
unix-syscalls += remap_file_pages
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,remap_file_pages)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME remap_file_pages'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 4'; \
	 echo '#define SYSCALL_SYMBOL __remap_file_pages'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__remap_file_pages, remap_file_pages)'; \
	 echo 'hidden_weak (remap_file_pages)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %remap_file_pages,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=sched_getp NUMBER=(121) ARGS=i:ip SOURCE=-
ifeq (,$(filter sched_getp,$(unix-syscalls)))
unix-syscalls += sched_getp
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sched_getp)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sched_getparam'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __sched_getparam'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__sched_getparam, sched_getparam)'; \
	 echo 'hidden_weak (sched_getparam)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sched_getp,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=sched_gets NUMBER=(120) ARGS=i:i SOURCE=-
ifeq (,$(filter sched_gets,$(unix-syscalls)))
unix-syscalls += sched_gets
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sched_gets)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sched_getscheduler'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __sched_getscheduler'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__sched_getscheduler, sched_getscheduler)'; \
	 echo 'hidden_weak (sched_getscheduler)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sched_gets,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=sched_primax NUMBER=(125) ARGS=i:i SOURCE=-
ifeq (,$(filter sched_primax,$(unix-syscalls)))
unix-syscalls += sched_primax
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sched_primax)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sched_get_priority_max'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __sched_get_priority_max'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__sched_get_priority_max, sched_get_priority_max)'; \
	 echo 'hidden_weak (sched_get_priority_max)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sched_primax,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=sched_primin NUMBER=(126) ARGS=i:i SOURCE=-
ifeq (,$(filter sched_primin,$(unix-syscalls)))
unix-syscalls += sched_primin
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sched_primin)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sched_get_priority_min'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __sched_get_priority_min'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__sched_get_priority_min, sched_get_priority_min)'; \
	 echo 'hidden_weak (sched_get_priority_min)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sched_primin,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=sched_setp NUMBER=(118) ARGS=i:ip SOURCE=-
ifeq (,$(filter sched_setp,$(unix-syscalls)))
unix-syscalls += sched_setp
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sched_setp)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sched_setparam'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __sched_setparam'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__sched_setparam, sched_setparam)'; \
	 echo 'hidden_weak (sched_setparam)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sched_setp,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=sched_sets NUMBER=(119) ARGS=i:iip SOURCE=-
ifeq (,$(filter sched_sets,$(unix-syscalls)))
unix-syscalls += sched_sets
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sched_sets)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sched_setscheduler'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __sched_setscheduler'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__sched_setscheduler, sched_setscheduler)'; \
	 echo 'hidden_weak (sched_setscheduler)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sched_sets,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=sched_yield NUMBER=(124) ARGS=i: SOURCE=-
ifeq (,$(filter sched_yield,$(unix-syscalls)))
unix-syscalls += sched_yield
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sched_yield)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sched_yield'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __sched_yield'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__sched_yield, sched_yield)'; \
	 echo 'hidden_weak (sched_yield)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sched_yield,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=setfsgid NUMBER=(152) ARGS=i:i SOURCE=-
ifeq (,$(filter setfsgid,$(unix-syscalls)))
unix-syscalls += setfsgid
unix-extra-syscalls += setfsgid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,setfsgid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME setfsgid'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL setfsgid'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %setfsgid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=setfsuid NUMBER=(151) ARGS=i:i SOURCE=-
ifeq (,$(filter setfsuid,$(unix-syscalls)))
unix-syscalls += setfsuid
unix-extra-syscalls += setfsuid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,setfsuid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME setfsuid'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL setfsuid'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %setfsuid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=setpgid NUMBER=(154) ARGS=i:ii SOURCE=-
ifeq (,$(filter setpgid,$(unix-syscalls)))
unix-syscalls += setpgid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,setpgid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME setpgid'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __setpgid'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__setpgid, setpgid)'; \
	 echo 'hidden_weak (setpgid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %setpgid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=sigaltstack NUMBER=(132) ARGS=i:PP SOURCE=-
ifeq (,$(filter sigaltstack,$(unix-syscalls)))
unix-syscalls += sigaltstack
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sigaltstack)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sigaltstack'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __sigaltstack'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__sigaltstack, sigaltstack)'; \
	 echo 'hidden_weak (sigaltstack)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sigaltstack,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=sysinfo NUMBER=(179) ARGS=i:p SOURCE=-
ifeq (,$(filter sysinfo,$(unix-syscalls)))
unix-syscalls += sysinfo
unix-extra-syscalls += sysinfo
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sysinfo)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sysinfo'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __sysinfo'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__sysinfo, sysinfo)'; \
	 echo 'hidden_weak (sysinfo)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sysinfo,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=swapon NUMBER=(224) ARGS=i:si SOURCE=-
ifeq (,$(filter swapon,$(unix-syscalls)))
unix-syscalls += swapon
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,swapon)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME swapon'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __swapon'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__swapon, swapon)'; \
	 echo 'hidden_weak (swapon)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %swapon,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=swapoff NUMBER=(225) ARGS=i:s SOURCE=-
ifeq (,$(filter swapoff,$(unix-syscalls)))
unix-syscalls += swapoff
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,swapoff)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME swapoff'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __swapoff'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__swapoff, swapoff)'; \
	 echo 'hidden_weak (swapoff)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %swapoff,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=unshare NUMBER=(97) ARGS=i:i SOURCE=-
ifeq (,$(filter unshare,$(unix-syscalls)))
unix-syscalls += unshare
unix-extra-syscalls += unshare
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,unshare)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME unshare'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL unshare'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %unshare,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=uselib NUMBER=- ARGS=i:s SOURCE=-
unix-stub-syscalls += __compat_uselib uselib@GLIBC_2.0:GLIBC_2.23

#### CALL=chown NUMBER=- ARGS=i:sii SOURCE=-

#### CALL=fchownat NUMBER=(54) ARGS=i:isiii SOURCE=-
ifeq (,$(filter fchownat,$(unix-syscalls)))
unix-syscalls += fchownat
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fchownat)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fchownat'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL fchownat'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fchownat,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=linkat NUMBER=(37) ARGS=i:isisi SOURCE=-
ifeq (,$(filter linkat,$(unix-syscalls)))
unix-syscalls += linkat
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,linkat)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME linkat'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL linkat'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %linkat,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=mkdirat NUMBER=(34) ARGS=i:isi SOURCE=-
ifeq (,$(filter mkdirat,$(unix-syscalls)))
unix-syscalls += mkdirat
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,mkdirat)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME mkdirat'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL mkdirat'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %mkdirat,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=readlinkat NUMBER=(78) ARGS=i:issU SOURCE=-
ifeq (,$(filter readlinkat,$(unix-syscalls)))
unix-syscalls += readlinkat
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,readlinkat)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME readlinkat'; \
	 echo '#define SYSCALL_NARGS 4'; \
	 echo '#define SYSCALL_ULONG_ARG_1 4'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL readlinkat'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %readlinkat,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=symlinkat NUMBER=(36) ARGS=i:sis SOURCE=-
ifeq (,$(filter symlinkat,$(unix-syscalls)))
unix-syscalls += symlinkat
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,symlinkat)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME symlinkat'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL symlinkat'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %symlinkat,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=unlinkat NUMBER=(35) ARGS=i:isi SOURCE=-
ifeq (,$(filter unlinkat,$(unix-syscalls)))
unix-syscalls += unlinkat
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,unlinkat)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME unlinkat'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL unlinkat'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %unlinkat,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=setxattr NUMBER=(5) ARGS=i:sspUi SOURCE=-
ifeq (,$(filter setxattr,$(unix-syscalls)))
unix-syscalls += setxattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,setxattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME setxattr'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 4'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL setxattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %setxattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=lsetxattr NUMBER=(6) ARGS=i:sspUi SOURCE=-
ifeq (,$(filter lsetxattr,$(unix-syscalls)))
unix-syscalls += lsetxattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,lsetxattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME lsetxattr'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 4'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL lsetxattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %lsetxattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fsetxattr NUMBER=(7) ARGS=i:ispUi SOURCE=-
ifeq (,$(filter fsetxattr,$(unix-syscalls)))
unix-syscalls += fsetxattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fsetxattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fsetxattr'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 4'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL fsetxattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fsetxattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=getxattr NUMBER=(8) ARGS=i:sspU SOURCE=-
ifeq (,$(filter getxattr,$(unix-syscalls)))
unix-syscalls += getxattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getxattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getxattr'; \
	 echo '#define SYSCALL_NARGS 4'; \
	 echo '#define SYSCALL_ULONG_ARG_1 4'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL getxattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getxattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=lgetxattr NUMBER=(9) ARGS=i:sspU SOURCE=-
ifeq (,$(filter lgetxattr,$(unix-syscalls)))
unix-syscalls += lgetxattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,lgetxattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME lgetxattr'; \
	 echo '#define SYSCALL_NARGS 4'; \
	 echo '#define SYSCALL_ULONG_ARG_1 4'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL lgetxattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %lgetxattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fgetxattr NUMBER=(10) ARGS=i:ispU SOURCE=-
ifeq (,$(filter fgetxattr,$(unix-syscalls)))
unix-syscalls += fgetxattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fgetxattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fgetxattr'; \
	 echo '#define SYSCALL_NARGS 4'; \
	 echo '#define SYSCALL_ULONG_ARG_1 4'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL fgetxattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fgetxattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=listxattr NUMBER=(11) ARGS=i:ssU SOURCE=-
ifeq (,$(filter listxattr,$(unix-syscalls)))
unix-syscalls += listxattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,listxattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME listxattr'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 3'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL listxattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %listxattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=llistxattr NUMBER=(12) ARGS=i:ssU SOURCE=-
ifeq (,$(filter llistxattr,$(unix-syscalls)))
unix-syscalls += llistxattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,llistxattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME llistxattr'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 3'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL llistxattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %llistxattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=flistxattr NUMBER=(13) ARGS=i:isU SOURCE=-
ifeq (,$(filter flistxattr,$(unix-syscalls)))
unix-syscalls += flistxattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,flistxattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME flistxattr'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 3'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL flistxattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %flistxattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=removexattr NUMBER=(14) ARGS=i:ss SOURCE=-
ifeq (,$(filter removexattr,$(unix-syscalls)))
unix-syscalls += removexattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,removexattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME removexattr'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL removexattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %removexattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=lremovexattr NUMBER=(15) ARGS=i:ss SOURCE=-
ifeq (,$(filter lremovexattr,$(unix-syscalls)))
unix-syscalls += lremovexattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,lremovexattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME lremovexattr'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL lremovexattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %lremovexattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fremovexattr NUMBER=(16) ARGS=i:is SOURCE=-
ifeq (,$(filter fremovexattr,$(unix-syscalls)))
unix-syscalls += fremovexattr
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fremovexattr)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fremovexattr'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL fremovexattr'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fremovexattr,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=timerfd_create NUMBER=(85) ARGS=i:ii SOURCE=-
ifeq (,$(filter timerfd_create,$(unix-syscalls)))
unix-syscalls += timerfd_create
unix-extra-syscalls += timerfd_create
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,timerfd_create)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME timerfd_create'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL timerfd_create'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %timerfd_create,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fanotify_init NUMBER=(262) ARGS=i:ii SOURCE=-
ifeq (,$(filter fanotify_init,$(unix-syscalls)))
unix-syscalls += fanotify_init
unix-extra-syscalls += fanotify_init
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fanotify_init)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fanotify_init'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL fanotify_init'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fanotify_init,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=name_to_handle_at NUMBER=(264) ARGS=i:isppi SOURCE=-
ifeq (,$(filter name_to_handle_at,$(unix-syscalls)))
unix-syscalls += name_to_handle_at
unix-extra-syscalls += name_to_handle_at
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,name_to_handle_at)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME name_to_handle_at'; \
	 echo '#define SYSCALL_NARGS 5'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL name_to_handle_at'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %name_to_handle_at,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=setns NUMBER=(268) ARGS=i:ii SOURCE=-
ifeq (,$(filter setns,$(unix-syscalls)))
unix-syscalls += setns
unix-extra-syscalls += setns
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,setns)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME setns'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL setns'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %setns,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=memfd_create NUMBER=(279) ARGS=i:si SOURCE=-
ifeq (,$(filter memfd_create,$(unix-syscalls)))
unix-syscalls += memfd_create
unix-extra-syscalls += memfd_create
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,memfd_create)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME memfd_create'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL memfd_create'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %memfd_create,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=pkey_alloc NUMBER=(289) ARGS=i:ii SOURCE=-
ifeq (,$(filter pkey_alloc,$(unix-syscalls)))
unix-syscalls += pkey_alloc
unix-extra-syscalls += pkey_alloc
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,pkey_alloc)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME pkey_alloc'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL pkey_alloc'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %pkey_alloc,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=pkey_free NUMBER=(290) ARGS=i:i SOURCE=-
ifeq (,$(filter pkey_free,$(unix-syscalls)))
unix-syscalls += pkey_free
unix-extra-syscalls += pkey_free
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,pkey_free)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME pkey_free'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL pkey_free'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %pkey_free,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=gettid NUMBER=(178) ARGS=i: SOURCE=-
ifeq (,$(filter gettid,$(unix-syscalls)))
unix-syscalls += gettid
unix-extra-syscalls += gettid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,gettid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME gettid'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __gettid'; \
	 echo '#define SYSCALL_NOERRNO 1'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__gettid, gettid)'; \
	 echo 'hidden_weak (gettid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %gettid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=tgkill NUMBER=(131) ARGS=i:iii SOURCE=-
ifeq (,$(filter tgkill,$(unix-syscalls)))
unix-syscalls += tgkill
unix-extra-syscalls += tgkill
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,tgkill)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME tgkill'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __tgkill'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__tgkill, tgkill)'; \
	 echo 'hidden_weak (tgkill)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %tgkill,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=close_range NUMBER=(436) ARGS=i:iii SOURCE=-
ifeq (,$(filter close_range,$(unix-syscalls)))
unix-syscalls += close_range
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,close_range)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME close_range'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __close_range'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__close_range, close_range)'; \
	 echo 'hidden_weak (close_range)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %close_range,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### DIRECTORY = sysdeps/unix
#### SYSDIRS = sysdeps/unix/sysv/linux/aarch64 sysdeps/aarch64/nptl sysdeps/unix/sysv/linux/wordsize-64 sysdeps/unix/sysv/linux sysdeps/nptl sysdeps/pthread sysdeps/gnu sysdeps/unix/inet sysdeps/unix/sysv

#### CALL=accept NUMBER=(202) ARGS=Ci:iBN SOURCE=sysdeps/unix/sysv/linux/accept.c

#### CALL=access NUMBER=- ARGS=i:si SOURCE=sysdeps/unix/sysv/linux/access.c

#### CALL=acct NUMBER=(89) ARGS=i:S SOURCE=-
ifeq (,$(filter acct,$(unix-syscalls)))
unix-syscalls += acct
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,acct)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME acct'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL acct'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %acct,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=adjtime NUMBER=- ARGS=i:pp SOURCE=sysdeps/unix/sysv/linux/adjtime.c

#### CALL=bind NUMBER=(200) ARGS=i:ipi SOURCE=sysdeps/unix/sysv/linux/bind.c

#### CALL=chdir NUMBER=(49) ARGS=i:s SOURCE=-
ifeq (,$(filter chdir,$(unix-syscalls)))
unix-syscalls += chdir
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,chdir)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME chdir'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __chdir'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__chdir, chdir)'; \
	 echo 'hidden_weak (chdir)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %chdir,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=chmod NUMBER=- ARGS=i:si SOURCE=sysdeps/unix/sysv/linux/chmod.c

#### CALL=chown NUMBER=- ARGS=i:sii SOURCE=sysdeps/unix/sysv/linux/chown.c

#### CALL=chroot NUMBER=(51) ARGS=i:s SOURCE=-
ifeq (,$(filter chroot,$(unix-syscalls)))
unix-syscalls += chroot
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,chroot)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME chroot'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL chroot'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %chroot,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=close NUMBER=(57) ARGS=Ci:i SOURCE=sysdeps/unix/sysv/linux/close.c

#### CALL=connect NUMBER=(203) ARGS=Ci:ipi SOURCE=sysdeps/unix/sysv/linux/connect.c

#### CALL=dup NUMBER=(23) ARGS=i:i SOURCE=-
ifeq (,$(filter dup,$(unix-syscalls)))
unix-syscalls += dup
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,dup)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME dup'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __dup'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__dup, dup)'; \
	 echo 'hidden_weak (dup)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %dup,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=dup2 NUMBER=- ARGS=i:ii SOURCE=sysdeps/unix/sysv/linux/dup2.c

#### CALL=dup3 NUMBER=(24) ARGS=i:iii SOURCE=-
ifeq (,$(filter dup3,$(unix-syscalls)))
unix-syscalls += dup3
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,dup3)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME dup3'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __dup3'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__dup3, dup3)'; \
	 echo 'hidden_weak (dup3)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %dup3,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fchdir NUMBER=(50) ARGS=i:i SOURCE=-
ifeq (,$(filter fchdir,$(unix-syscalls)))
unix-syscalls += fchdir
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fchdir)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fchdir'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __fchdir'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__fchdir, fchdir)'; \
	 echo 'hidden_weak (fchdir)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fchdir,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fchmod NUMBER=(52) ARGS=i:ii SOURCE=-
ifeq (,$(filter fchmod,$(unix-syscalls)))
unix-syscalls += fchmod
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fchmod)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fchmod'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __fchmod'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__fchmod, fchmod)'; \
	 echo 'hidden_weak (fchmod)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fchmod,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fchown NUMBER=(55) ARGS=i:iii SOURCE=-
ifeq (,$(filter fchown,$(unix-syscalls)))
unix-syscalls += fchown
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,fchown)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME fchown'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __fchown'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__fchown, fchown)'; \
	 echo 'hidden_weak (fchown)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %fchown,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=fcntl NUMBER=(25) ARGS=Ci:iiF SOURCE=sysdeps/unix/sysv/linux/fcntl.c

#### CALL=fstatfs NUMBER=(44) ARGS=i:ip SOURCE=sysdeps/unix/sysv/linux/fstatfs.c

#### CALL=ftruncate NUMBER=(46) ARGS=i:ii SOURCE=sysdeps/unix/sysv/linux/ftruncate.c

#### CALL=getdomain NUMBER=- ARGS=i:si SOURCE=-

#### CALL=getgid NUMBER=(176) ARGS=i: SOURCE=-
ifeq (,$(filter getgid,$(unix-syscalls)))
unix-syscalls += getgid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getgid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getgid'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __getgid'; \
	 echo '#define SYSCALL_NOERRNO 1'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__getgid, getgid)'; \
	 echo 'hidden_weak (getgid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getgid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=getgroups NUMBER=(158) ARGS=i:ip SOURCE=-
ifeq (,$(filter getgroups,$(unix-syscalls)))
unix-syscalls += getgroups
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getgroups)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getgroups'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __getgroups'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__getgroups, getgroups)'; \
	 echo 'hidden_weak (getgroups)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getgroups,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=gethostid NUMBER=- ARGS=i: SOURCE=sysdeps/unix/sysv/linux/gethostid.c

#### CALL=gethostname NUMBER=- ARGS=i:bn SOURCE=-

#### CALL=getpeername NUMBER=(205) ARGS=i:ibN SOURCE=sysdeps/unix/sysv/linux/getpeername.c

#### CALL=getpid NUMBER=(172) ARGS=i: SOURCE=-
ifeq (,$(filter getpid,$(unix-syscalls)))
unix-syscalls += getpid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getpid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getpid'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __getpid'; \
	 echo '#define SYSCALL_NOERRNO 1'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__getpid, getpid)'; \
	 echo 'hidden_weak (getpid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getpid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=getpriority NUMBER=(141) ARGS=i:ii SOURCE=sysdeps/unix/sysv/linux/getpriority.c

#### CALL=getrlimit NUMBER=(163) ARGS=i:ip SOURCE=sysdeps/unix/sysv/linux/getrlimit.c

#### CALL=getsockname NUMBER=(204) ARGS=i:ibN SOURCE=sysdeps/unix/sysv/linux/getsockname.c

#### CALL=getsockopt NUMBER=(209) ARGS=i:iiiBN SOURCE=sysdeps/unix/sysv/linux/getsockopt.c

#### CALL=getuid NUMBER=(174) ARGS=i: SOURCE=-
ifeq (,$(filter getuid,$(unix-syscalls)))
unix-syscalls += getuid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,getuid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME getuid'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __getuid'; \
	 echo '#define SYSCALL_NOERRNO 1'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__getuid, getuid)'; \
	 echo 'hidden_weak (getuid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %getuid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=ioctl NUMBER=(29) ARGS=i:iiI SOURCE=sysdeps/unix/sysv/linux/aarch64/ioctl.S

#### CALL=kill NUMBER=(129) ARGS=i:ii SOURCE=-
ifeq (,$(filter kill,$(unix-syscalls)))
unix-syscalls += kill
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,kill)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME kill'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __kill'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__kill, kill)'; \
	 echo 'hidden_weak (kill)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %kill,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=link NUMBER=- ARGS=i:ss SOURCE=sysdeps/unix/sysv/linux/link.c

#### CALL=listen NUMBER=(201) ARGS=i:ii SOURCE=sysdeps/unix/sysv/linux/listen.c

#### CALL=lseek NUMBER=(62) ARGS=i:iii SOURCE=sysdeps/unix/sysv/linux/lseek.c

#### CALL=madvise NUMBER=(233) ARGS=i:pUi SOURCE=-
ifeq (,$(filter madvise,$(unix-syscalls)))
unix-syscalls += madvise
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,madvise)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME madvise'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __madvise'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__madvise, madvise)'; \
	 echo 'hidden_weak (madvise)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %madvise,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=mkdir NUMBER=- ARGS=i:si SOURCE=sysdeps/unix/sysv/linux/mkdir.c

#### CALL=mmap NUMBER=(222) ARGS=b:aUiiii SOURCE=sysdeps/unix/sysv/linux/mmap.c

#### CALL=mprotect NUMBER=(226) ARGS=i:aUi SOURCE=-
ifeq (,$(filter mprotect,$(unix-syscalls)))
unix-syscalls += mprotect
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,mprotect)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME mprotect'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __mprotect'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__mprotect, mprotect)'; \
	 echo 'hidden_weak (mprotect)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %mprotect,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=munmap NUMBER=(215) ARGS=i:aU SOURCE=-
ifeq (,$(filter munmap,$(unix-syscalls)))
unix-syscalls += munmap
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,munmap)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME munmap'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 2'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __munmap'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__munmap, munmap)'; \
	 echo 'hidden_weak (munmap)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %munmap,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=open NUMBER=- ARGS=Ci:siv SOURCE=sysdeps/unix/sysv/linux/open.c

#### CALL=profil NUMBER=- ARGS=i:piii SOURCE=sysdeps/unix/sysv/linux/profil.c

#### CALL=ptrace NUMBER=(117) ARGS=i:iiii SOURCE=sysdeps/unix/sysv/linux/ptrace.c

#### CALL=read NUMBER=(63) ARGS=Ci:ibU SOURCE=sysdeps/unix/sysv/linux/read.c

#### CALL=readlink NUMBER=- ARGS=i:spU SOURCE=sysdeps/unix/sysv/linux/readlink.c

#### CALL=readv NUMBER=(65) ARGS=Ci:ipi SOURCE=sysdeps/unix/sysv/linux/readv.c

#### CALL=reboot NUMBER=(142) ARGS=i:i SOURCE=sysdeps/unix/sysv/linux/reboot.c

#### CALL=recv NUMBER=- ARGS=Ci:ibUi SOURCE=sysdeps/unix/sysv/linux/recv.c

#### CALL=recvfrom NUMBER=(207) ARGS=Ci:ibUiBN SOURCE=sysdeps/unix/sysv/linux/recvfrom.c

#### CALL=recvmsg NUMBER=(212) ARGS=Ci:ipi SOURCE=sysdeps/unix/sysv/linux/recvmsg.c

#### CALL=rename NUMBER=- ARGS=i:ss SOURCE=sysdeps/unix/sysv/linux/rename.c

#### CALL=rmdir NUMBER=- ARGS=i:s SOURCE=sysdeps/unix/sysv/linux/rmdir.c

#### CALL=select NUMBER=- ARGS=Ci:iPPPP SOURCE=sysdeps/unix/sysv/linux/select.c

#### CALL=send NUMBER=- ARGS=Ci:ibUi SOURCE=sysdeps/unix/sysv/linux/aarch64/send.c

#### CALL=sendmsg NUMBER=(211) ARGS=Ci:ipi SOURCE=sysdeps/unix/sysv/linux/sendmsg.c

#### CALL=sendto NUMBER=(206) ARGS=Ci:ibUibn SOURCE=sysdeps/unix/sysv/linux/sendto.c

#### CALL=setdomain NUMBER=(162) ARGS=i:si SOURCE=-
ifeq (,$(filter setdomain,$(unix-syscalls)))
unix-syscalls += setdomain
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,setdomain)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME setdomainname'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL setdomainname'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %setdomain,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=setegid NUMBER=- ARGS=i:i SOURCE=sysdeps/unix/sysv/linux/setegid.c

#### CALL=seteuid NUMBER=- ARGS=i:i SOURCE=sysdeps/unix/sysv/linux/seteuid.c

#### CALL=setgid NUMBER=(144) ARGS=i:i SOURCE=sysdeps/unix/sysv/linux/setgid.c

#### CALL=setgroups NUMBER=(159) ARGS=i:ip SOURCE=sysdeps/unix/sysv/linux/setgroups.c

#### CALL=sethostid NUMBER=- ARGS=i:i SOURCE=sysdeps/unix/sysv/linux/sethostid.c

#### CALL=sethostname NUMBER=(161) ARGS=i:pi SOURCE=-
ifeq (,$(filter sethostname,$(unix-syscalls)))
unix-syscalls += sethostname
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sethostname)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sethostname'; \
	 echo '#define SYSCALL_NARGS 2'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL sethostname'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sethostname,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=setpgid NUMBER=- ARGS=i:ii SOURCE=-

#### CALL=setpriority NUMBER=(140) ARGS=i:iii SOURCE=-
ifeq (,$(filter setpriority,$(unix-syscalls)))
unix-syscalls += setpriority
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,setpriority)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME setpriority'; \
	 echo '#define SYSCALL_NARGS 3'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __setpriority'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__setpriority, setpriority)'; \
	 echo 'hidden_weak (setpriority)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %setpriority,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=setregid NUMBER=(143) ARGS=i:ii SOURCE=sysdeps/unix/sysv/linux/setregid.c

#### CALL=setreuid NUMBER=(145) ARGS=i:ii SOURCE=sysdeps/unix/sysv/linux/setreuid.c

#### CALL=setrlimit NUMBER=(164) ARGS=i:ip SOURCE=sysdeps/unix/sysv/linux/setrlimit.c

#### CALL=setsid NUMBER=(157) ARGS=i: SOURCE=-
ifeq (,$(filter setsid,$(unix-syscalls)))
unix-syscalls += setsid
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,setsid)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME setsid'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __setsid'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__setsid, setsid)'; \
	 echo 'hidden_weak (setsid)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %setsid,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=setsockopt NUMBER=(208) ARGS=i:iiibn SOURCE=sysdeps/unix/sysv/linux/setsockopt.c

#### CALL=setuid NUMBER=(146) ARGS=i:i SOURCE=sysdeps/unix/sysv/linux/setuid.c

#### CALL=shutdown NUMBER=(210) ARGS=i:ii SOURCE=sysdeps/unix/sysv/linux/shutdown.c

#### CALL=sigsuspend NUMBER=- ARGS=Ci:p SOURCE=sysdeps/unix/sysv/linux/sigsuspend.c

#### CALL=socket NUMBER=(198) ARGS=i:iii SOURCE=sysdeps/unix/sysv/linux/socket.c

#### CALL=socketpair NUMBER=(199) ARGS=i:iiif SOURCE=sysdeps/unix/sysv/linux/socketpair.c

#### CALL=statfs NUMBER=(43) ARGS=i:sp SOURCE=sysdeps/unix/sysv/linux/statfs.c

#### CALL=swapoff NUMBER=(225) ARGS=i:s SOURCE=-
ifeq (,$(filter swapoff,$(unix-syscalls)))
unix-syscalls += swapoff
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,swapoff)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME swapoff'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL swapoff'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %swapoff,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=swapon NUMBER=(224) ARGS=i:s SOURCE=-
ifeq (,$(filter swapon,$(unix-syscalls)))
unix-syscalls += swapon
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,swapon)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME swapon'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL swapon'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %swapon,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=symlink NUMBER=- ARGS=i:ss SOURCE=sysdeps/unix/sysv/linux/symlink.c

#### CALL=sync NUMBER=(81) ARGS=i: SOURCE=-
ifeq (,$(filter sync,$(unix-syscalls)))
unix-syscalls += sync
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,sync)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME sync'; \
	 echo '#define SYSCALL_NARGS 0'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL sync'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %sync,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=syncfs NUMBER=(267) ARGS=i:i SOURCE=-
ifeq (,$(filter syncfs,$(unix-syscalls)))
unix-syscalls += syncfs
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,syncfs)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME syncfs'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL syncfs'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %syncfs,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=truncate NUMBER=(45) ARGS=i:si SOURCE=sysdeps/unix/sysv/linux/truncate.c

#### CALL=umask NUMBER=(166) ARGS=i:i SOURCE=-
ifeq (,$(filter umask,$(unix-syscalls)))
unix-syscalls += umask
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,umask)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME umask'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __umask'; \
	 echo '#define SYSCALL_NOERRNO 1'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__umask, umask)'; \
	 echo 'hidden_weak (umask)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %umask,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=uname NUMBER=(160) ARGS=i:p SOURCE=-
ifeq (,$(filter uname,$(unix-syscalls)))
unix-syscalls += uname
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,uname)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME uname'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL __uname'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	 echo 'weak_alias (__uname, uname)'; \
	 echo 'hidden_weak (uname)'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %uname,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=unlink NUMBER=- ARGS=i:s SOURCE=sysdeps/unix/sysv/linux/unlink.c

#### CALL=utimes NUMBER=- ARGS=i:sp SOURCE=sysdeps/unix/sysv/linux/utimes.c

#### CALL=vhangup NUMBER=(58) ARGS=i:i SOURCE=-
ifeq (,$(filter vhangup,$(unix-syscalls)))
unix-syscalls += vhangup
$(foreach p,$(sysd-rules-targets),$(foreach o,$(object-suffixes),$(objpfx)$(patsubst %,$p,vhangup)$o)): \
		$(..)sysdeps/unix/make-syscalls.sh
	$(make-target-directory)
	(echo '#define SYSCALL_NAME vhangup'; \
	 echo '#define SYSCALL_NARGS 1'; \
	 echo '#define SYSCALL_ULONG_ARG_1 0'; \
	 echo '#define SYSCALL_ULONG_ARG_2 0'; \
	 echo '#define SYSCALL_SYMBOL vhangup'; \
	 echo '#define SYSCALL_NOERRNO 0'; \
	 echo '#define SYSCALL_ERRVAL 0'; \
	 echo '#include <syscall-template.S>'; \
	) | $(compile-syscall) $(foreach p,$(patsubst %vhangup,%,$(basename $(@F))),$($(p)CPPFLAGS))
endif

#### CALL=write NUMBER=(64) ARGS=Ci:ibU SOURCE=sysdeps/unix/sysv/linux/write.c

#### CALL=writev NUMBER=(66) ARGS=Ci:ipi SOURCE=sysdeps/unix/sysv/linux/writev.c
